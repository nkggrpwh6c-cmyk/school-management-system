# Generated by Django 4.2.7 on 2025-10-19 14:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('auto_archive_after_years', models.IntegerField(default=5, help_text='Auto-archive students inactive for X years')),
                ('auto_archive_graduated', models.BooleanField(default=True, help_text='Auto-archive graduated students')),
                ('auto_archive_transferred', models.BooleanField(default=True, help_text='Auto-archive transferred students')),
                ('keep_graduated_records_years', models.IntegerField(default=10, help_text='Keep graduated student records for X years')),
                ('keep_transferred_records_years', models.IntegerField(default=7, help_text='Keep transferred student records for X years')),
                ('cleanup_old_archives', models.BooleanField(default=True, help_text='Clean up very old archive records')),
                ('cleanup_after_years', models.IntegerField(default=15, help_text='Clean up archives older than X years')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive_reason', models.CharField(choices=[('graduated', 'Graduated'), ('transferred', 'Transferred'), ('dropped', 'Dropped Out'), ('inactive', 'Inactive'), ('alumni', 'Alumni')], max_length=20)),
                ('archive_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the archive')),
                ('original_grade', models.CharField(blank=True, max_length=50)),
                ('original_section', models.CharField(blank=True, max_length=50)),
                ('graduation_year', models.CharField(blank=True, max_length=10)),
                ('transfer_school', models.CharField(blank=True, max_length=200)),
                ('archived_data', models.JSONField(default=dict, help_text='Snapshot of student data at time of archiving')),
                ('archived_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archived_students', to=settings.AUTH_USER_MODEL)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='archive_record', to='students.student')),
            ],
            options={
                'ordering': ['-archive_date'],
            },
        ),
        migrations.CreateModel(
            name='ArchiveLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('archived', 'Student Archived'), ('restored', 'Student Restored'), ('auto_archived', 'Auto-Archived'), ('bulk_archived', 'Bulk Archived'), ('cleanup', 'Archive Cleanup')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True)),
                ('affected_count', models.IntegerField(default=1)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
